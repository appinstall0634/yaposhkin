const express = require("express");
const body_parser = require("body-parser");
const axios = require("axios");
require('dotenv').config();

const app = express().use(body_parser.json());

const token = process.env.TOKEN;
const mytoken = process.env.MYTOKEN; // prasath_token

app.listen(process.env.PORT, () => {
    console.log("webhook is listening");
});

// to verify the callback url from dashboard side - cloud api side
app.get("/webhook", (req, res) => {
    let mode = req.query["hub.mode"];
    let challenge = req.query["hub.challenge"];
    let token = req.query["hub.verify_token"];

    if (mode && token) {
        if (mode === "subscribe" && token === mytoken) {
            res.status(200).send(challenge);
        } else {
            res.status(403).send("Forbidden");
        }
    }
});

app.post("/webhook", async (req, res) => {
    let body_param = req.body;

    console.log(JSON.stringify(body_param, null, 2));

    if (body_param.object) {
        console.log("inside body param");
        if (body_param.entry && 
            body_param.entry[0].changes && 
            body_param.entry[0].changes[0].value.messages && 
            body_param.entry[0].changes[0].value.messages[0]) {
            
            let phone_no_id = body_param.entry[0].changes[0].value.metadata.phone_number_id;
            let from = body_param.entry[0].changes[0].value.messages[0].from;
            let message = body_param.entry[0].changes[0].value.messages[0];

            console.log("phone number " + phone_no_id);
            console.log("from " + from);
            console.log("message:", JSON.stringify(message, null, 2));

            try {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
                if (message.type === "interactive" && message.interactive.type === "nfm_reply") {
                    // –û—Ç–≤–µ—Ç –æ—Ç Flow - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫–∞—Ç–∞–ª–æ–≥
                    await handleFlowResponse(phone_no_id, from, message, body_param);
                } else {
                    // –õ—é–±–æ–µ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º Flow
                    await sendFlowMessage(phone_no_id, from);
                }
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
            }

            res.sendStatus(200);
        } else {
            res.sendStatus(404);
        }
    }
});

// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ Flow
async function sendFlowMessage(phone_no_id, to) {
    console.log("=== –û–¢–ü–†–ê–í–ö–ê FLOW ===");
    console.log("phone_no_id:", phone_no_id);
    console.log("to:", to);
    
    const flowData = {
        messaging_product: "whatsapp",
        to: to,
        type: "interactive",
        interactive: {
            type: "flow",
            body: {
                text: "üç£ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Yaposhkin Rolls!\n\n–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É:"
            },
            footer: {
                text: "–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–º—É –≥–æ—Ä–æ–¥—É"
            },
            action: {
                name: "flow",
                parameters: {
                    flow_message_version: "3",
                    flow_token: "unused",
                    flow_id: "yaposhflows",
                    flow_cta: "–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É",
                    flow_action: "navigate"
                }
            }
        }
    };

    console.log("Flow data:", JSON.stringify(flowData, null, 2));

    // –í –Ω–∞—á–∞–ª–µ sendFlowMessage –¥–æ–±–∞–≤—å—Ç–µ:
console.log("TOKEN exists:", !!token);
console.log("TOKEN length:", token ? token.length : 0);
console.log("URL:", "https://graph.facebook.com/v22.0/" + phone_no_id + "/messages");

    try {
        const response = await axios({
            method: "POST",
            url: "https://graph.facebook.com/v22.0/" + phone_no_id + "/messages?access_token=" + token,
            data: flowData,
            headers: {
                "Content-Type": "application/json"
            }
        });
        
        console.log("‚úÖ Flow –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ:", response.data);
        return response.data;
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Flow:");
        console.error("Status:", error.response?.status);
        console.error("Data:", error.response?.data);
        console.error("Message:", error.message);
        throw error;
    }
}

// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Flow
async function handleFlowResponse(phone_no_id, from, message, body_param) {
    try {
        console.log("=== –û–ë–†–ê–ë–û–¢–ö–ê FLOW –û–¢–í–ï–¢–ê ===");
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Flow –æ—Ç–≤–µ—Ç–∞
        const flowResponse = JSON.parse(message.interactive.nfm_reply.response_json);
        const customerProfile = body_param.entry[0].changes[0].value.contacts[0].profile.name;
        
        console.log('–¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞:', from);
        console.log('–ò–º—è –ø—Ä–æ—Ñ–∏–ª—è WhatsApp:', customerProfile);
        console.log('–î–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã:', flowResponse);
        
        // –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
        const orderData = {
            customer_phone: from,
            whatsapp_name: customerProfile,
            customer_name: flowResponse.customer_name,
            delivery_address: flowResponse.delivery_address,
            delivery_area: flowResponse.delivery_area,
            payment_method: flowResponse.payment_method,
            delivery_terms_accepted: flowResponse.delivery_terms,
            order_timestamp: new Date().toISOString(),
            message_id: message.id
        };

        console.log('–î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', orderData);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        await sendGreeting(phone_no_id, from, orderData);
        
        // –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ç–∞–ª–æ–≥
        setTimeout(async () => {
            try {
                await sendCatalog(phone_no_id, from);
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞:", error);
            }
        }, 2000);

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Flow –æ—Ç–≤–µ—Ç–∞:", error);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        await sendMessage(phone_no_id, from, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ä–º—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    }
}

// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
async function sendGreeting(phone_no_id, to, orderData) {
    const greetingText = `üéâ –°–ø–∞—Å–∏–±–æ, ${orderData.customer_name}!

‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:
üë§ –ò–º—è: ${orderData.customer_name}
üìç –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: ${orderData.delivery_address}
üèôÔ∏è –†–∞–π–æ–Ω: ${getAreaName(orderData.delivery_area)}
üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: ${getPaymentMethodName(orderData.payment_method)}

–°–µ–π—á–∞—Å –æ—Ç–ø—Ä–∞–≤–ª—é –≤–∞–º –Ω–∞—à –∫–∞—Ç–∞–ª–æ–≥ –¥–ª—è –≤—ã–±–æ—Ä–∞ –±–ª—é–¥! üç£`;

    return await sendMessage(phone_no_id, to, greetingText);
}

// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞
async function sendCatalog(phone_no_id, to) {
    console.log("=== –û–¢–ü–†–ê–í–ö–ê –ö–ê–¢–ê–õ–û–ì–ê ===");
    
    const catalogData = {
        messaging_product: "whatsapp",
        to: to,
        type: "interactive",
        interactive: {
            type: "catalog_message",
            body: {
                text: "üç£ –ù–∞—à –ø–æ–ª–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ Yaposhkin Rolls!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è –±–ª—é–¥–∞ –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –∫–æ—Ä–∑–∏–Ω—É. –í—Å–µ —Ç–æ–≤–∞—Ä—ã —Å–≤–µ–∂–∏–µ –∏ –≥–æ—Ç–æ–≤—è—Ç—Å—è —Å –ª—é–±–æ–≤—å—é! ‚ù§Ô∏è"
            },
            footer: {
                text: "–î–æ—Å—Ç–∞–≤–∫–∞ 30-40 –º–∏–Ω—É—Ç"
            },
            action: {
                name: "catalog_message"
            }
        }
    };

    try {
        const response = await axios({
            method: "POST",
            url: "https://graph.facebook.com/v22.0/" + phone_no_id + "/messages?access_token=" + token,
            data: catalogData,
            headers: {
                "Content-Type": "application/json"
            }
        });
        
        console.log("‚úÖ –ö–∞—Ç–∞–ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ:", response.data);
        return response.data;
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞:");
        console.error("Status:", error.response?.status);
        console.error("Data:", error.response?.data);
        throw error;
    }
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async function sendMessage(phone_no_id, to, text) {
    try {
        const response = await axios({
            method: "POST",
            url: "https://graph.facebook.com/v22.0/" + phone_no_id + "/messages?access_token=" + token,
            data: {
                messaging_product: "whatsapp",
                to: to,
                text: {
                    body: text
                }
            },
            headers: {
                "Content-Type": "application/json"
            }
        });
        
        console.log("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:", response.data);
        return response.data;
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:");
        console.error("Status:", error.response?.status);
        console.error("Data:", error.response?.data);
        throw error;
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Flow
function handleFlowResponse(phone_no_id, from, message, body_param) {
    try {
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Flow –æ—Ç–≤–µ—Ç–∞
        const flowResponse = JSON.parse(message.interactive.nfm_reply.response_json);
        const customerProfile = body_param.entry[0].changes[0].value.contacts[0].profile.name;
        
        console.log('=== –û–¢–í–ï–¢ –û–¢ FLOW ===');
        console.log('–¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞:', from);
        console.log('–ò–º—è –ø—Ä–æ—Ñ–∏–ª—è WhatsApp:', customerProfile);
        console.log('–î–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã:', flowResponse);
        
        // –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
        const orderData = {
            customer_phone: from,
            whatsapp_name: customerProfile,
            customer_name: flowResponse.customer_name,
            delivery_address: flowResponse.delivery_address,
            delivery_area: flowResponse.delivery_area,
            payment_method: flowResponse.payment_method,
            delivery_terms_accepted: flowResponse.delivery_terms,
            order_timestamp: new Date().toISOString(),
            message_id: message.id
        };

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ (–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î)
        console.log('–î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', orderData);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        sendGreeting(phone_no_id, from, orderData);
        
        // –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ç–∞–ª–æ–≥
        setTimeout(() => {
            sendCatalog(phone_no_id, from);
        }, 2000);

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Flow –æ—Ç–≤–µ—Ç–∞:", error);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        sendMessage(phone_no_id, from, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ä–º—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
function sendGreeting(phone_no_id, to, orderData) {
    const greetingText = `üéâ –°–ø–∞—Å–∏–±–æ, ${orderData.customer_name}!

‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:
üë§ –ò–º—è: ${orderData.customer_name}
üìç –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: ${orderData.delivery_address}
üèôÔ∏è –†–∞–π–æ–Ω: ${getAreaName(orderData.delivery_area)}
üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: ${getPaymentMethodName(orderData.payment_method)}

–°–µ–π—á–∞—Å –æ—Ç–ø—Ä–∞–≤–ª—é –≤–∞–º –Ω–∞—à –∫–∞—Ç–∞–ª–æ–≥ –¥–ª—è –≤—ã–±–æ—Ä–∞ –±–ª—é–¥! üç£`;

    sendMessage(phone_no_id, to, greetingText);
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞
function sendCatalog(phone_no_id, to) {
    const catalogData = {
        messaging_product: "whatsapp",
        to: to,
        type: "interactive",
        interactive: {
            type: "catalog_message",
            body: {
                text: "üç£ –ù–∞—à –ø–æ–ª–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ Yaposhkin Rolls!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è –±–ª—é–¥–∞ –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –∫–æ—Ä–∑–∏–Ω—É. –í—Å–µ —Ç–æ–≤–∞—Ä—ã —Å–≤–µ–∂–∏–µ –∏ –≥–æ—Ç–æ–≤—è—Ç—Å—è —Å –ª—é–±–æ–≤—å—é! ‚ù§Ô∏è"
            },
            footer: {
                text: "–î–æ—Å—Ç–∞–≤–∫–∞ 30-40 –º–∏–Ω—É—Ç"
            },
            action: {
                name: "catalog_message"
            }
        }
    };

    axios({
        method: "POST",
        url: "https://graph.facebook.com/v22.0/" + phone_no_id + "/messages?access_token=" + token,
        data: catalogData,
        headers: {
            "Content-Type": "application/json"
        }
    }).then(response => {
        console.log("–ö–∞—Ç–∞–ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ:", response.data);
    }).catch(error => {
        console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞:", error.response?.data || error.message);
    });
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
function sendMessage(phone_no_id, to, text) {
    axios({
        method: "POST",
        url: "https://graph.facebook.com/v22.0/" + phone_no_id + "/messages?access_token=" + token,
        data: {
            messaging_product: "whatsapp",
            to: to,
            text: {
                body: text
            }
        },
        headers: {
            "Content-Type": "application/json"
        }
    }).then(response => {
        console.log("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:", response.data);
    }).catch(error => {
        console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", error.response?.data || error.message);
    });
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getAreaName(areaCode) {
    const areas = {
        'center': '–¶–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞',
        'north': '–°–µ–≤–µ—Ä–Ω—ã–π —Ä–∞–π–æ–Ω',
        'south': '–Æ–∂–Ω—ã–π —Ä–∞–π–æ–Ω',
        'east': '–í–æ—Å—Ç–æ—á–Ω—ã–π —Ä–∞–π–æ–Ω',
        'west': '–ó–∞–ø–∞–¥–Ω—ã–π —Ä–∞–π–æ–Ω'
    };
    return areas[areaCode] || areaCode;
}

function getPaymentMethodName(method) {
    const methods = {
        'cash': '–ù–∞–ª–∏—á–Ω—ã–º–∏ –∫—É—Ä—å–µ—Ä—É',
        'card': '–ë–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π',
        'transfer': '–ü–µ—Ä–µ–≤–æ–¥–æ–º'
    };
    return methods[method] || method;
}

app.get("/", (req, res) => {
    res.status(200).send("hello this is webhook setup");
});